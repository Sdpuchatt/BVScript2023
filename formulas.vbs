IF CURRENTRECORD("USR_LIBSUE_V_NROBLQ") = "04" THEN

PERIODO = PARAMETERS("PERIODO").VALUES(1).FROMVALUESQL
MES = MID(CSTR(PERIOD),5,2)  
CUIL = CURRENTRECORD("DOCUMENTO")
CODOBS = MID(CSTR(CURRENTRECORD("CODOBS")),1,6)
IMPJUB = CURRENTRECORD("IMPO1")
CODACT = CURRENTRECORD("CODACT")
IMPO1 =  CURRENTRECORD("IMPO1")
IF IMPO1 = 0 THEN 
rem	IMPO1 = 0.01
	IMPO1 = 0.00
END IF



REM CANTIDAD DE HORAS EXTRAS
CANT_HE = ACTUALREG("CANT_HE")


HIJOS = CURRENTRECORD("HIJOS")
ESPOSA = CURRENTRECORD("CONYU")

ADI = CURRENTRECORD("REPARTO")
CODZON = CURRENTRECORD("CODZON")
CODSIT = CURRENTRECORD("CODSIT")
CODCON = CURRENTRECORD("CODCON")
MODCON = CURRENTRECORD("MODCON")
NOMBRE =  mid(CURRENTRECORD("NOMBRE"),1,30)
CODOBS2 = MID(CSTR(CURRENTRECORD("CODOBS2")),1,6)
SEGVID = ACTUALREG("SEGURO_VIDA")



NROLEG = "'" & CURRENTRECORD("NUMEROLEGAJO") & "'" 

SSQL = "SELECT SJMLGI_SELECC from SJMLGI where SJMLGI_CODVAR = 'SSOIP' AND "
SSQL = SSQL + "SJMLGI_NROLEG = "&NROLEG
CONCONV = QUERYEXEC(CSTR(SSQL))
IF(CONCONV="S") THEN
CONCONV = 1
ELSE
CONCONV = 0
END IF

CORRED = PARAMETERS("MARCCRED").VALUES(1).FROMVALUESQL
    IF CORRED = "'S'" THEN
        CORRED = 1
    ELSE
        CORRED = 0
    END IF

CODEMP = PARAMETERS("CODEMPASOCTRABJ").VALUES(1).FROMVALUETEXT

SSQL  = " "
SSQL = SSQL + " SELECT SJMLGI_IMPORT FROM SJMLGI WHERE SJMLGI_NROLEG = " &NROLEG
SSQL = SSQL + "  AND SJMLGI_CODVAR = 'ADEOBS' "
CANT_ADE = QUERYEXEC(CSTR(SSQL))


IMPO2 =  CURRENTRECORD("IMPO2")

IF IMPO2 = 0 THEN 
rem	IMPO2 = 0.01
		IMPO2 = 0.00
END IF
IMPO3 =  CURRENTRECORD("IMPO3")
IF IMPO3 = 0 THEN 
rem	IMPO3 = 0.01
		IMPO3 = 0.00
END IF
IMPO4 =  CURRENTRECORD("IMPO4")
IF IMPO4 = 0 THEN 
rem	IMPO4 = 0.01
		IMPO4 = 0.00
END IF

IMPO5 =  CURRENTRECORD("IMPO5")
IF IMPO5 = 0 THEN 
rem	IMPO5 = 0.01
		IMPO5 = 0.00	
END IF

IMPO9 =  CURRENTRECORD("IMPO9")
IF IMPO9 = 0 THEN 
rem	IMPO9 = 0.01
		IMPO9 = 0.00	
END IF

IF CURRENTRECORD("REMTOT") < IMPO1  then 
	REMUNE = IMPO1
    ELSE
	IF CURRENTRECORD("REMTOT") =0.01 THEN
		REMUNE = 0.00
	ELSE
		REMUNE = CURRENTRECORD("REMTOT")
	END IF
END IF 


IF IMPO2 < IMPO1 THEN 
	IMPO2 = IMPO1
    IMPO3 = IMPO2 'AGREGADO 7-2-2022 TICKET 8839 
END IF 


IF REMUNE = 0 THEN 
rem	REMUNE = 0.01
		REMUNE = 0.00
END IF 

REM  ARREGLO PARA DICIEMBRE 2015

rem IMPO1 =  IMPO3
rem IMPO2 =  IMPO3
rem IMPO4 =  IMPO3
rem IMPO5 =  IMPO3
rem IMPO8 =  IMPO3


CADOS =  CURRENTRECORD("CAOS")
PROV =  CURRENTRECORD("PROV")
RG =  CURRENTRECORD("REG")
CON =  CURRENTRECORD("CONV")
REM APOR_OS =  CURRENTRECORD("ADIO")
APOR_OS = 0
REM5 = CURRENTRECORD("REMU_5")
MES = MID(CSTR(PARAMETERS("PERIODO").VALUES(1).FROMVALUESQL),5,2)
DTO519 =  CURRENTRECORD("DTO519")


DC_BASICO = CURRENTRECORD("BASICO_DC") 
DC_PREMIO = CURRENTRECORD("PREMIO_DC") 
DC_HORAS = ROUND(CURRENTRECORD("HORAS_DC"),2)
DC_SAC = CURRENTRECORD("SAC_DC")  
DC_VACAC = CURRENTRECORD("VACAC_DC")
NOREMU =  CURRENTRECORD("REMUNE2")
IF NOREMU = 0.01 THEN 
		NOREMU = 0.00
END IF 

IF DC_BASICO < 0 THEN 
	DC_BASICO = 0 
END IF 


REM CHEQUEO EL TOTAL DE DATOS COMPLEMENTARIO NO SEA MAYOR AL IMPONIBLE 1

DC_SUELDO=ROUND( (IMPO2  - (DC_BASICO + DC_PREMIO + DC_HORAS + DC_SAC + DC_VACAC )) ,2)


REM LOGICA APLICADA POR PREMIO NEGATIVO 
REM MARIANO LERNER 05-07-2012
IF  DC_PREMIO < 0  or DC_SAC  < 0   or  DC_BASICO  < 0  or DC_SUELDO < 0 THEN 
	CANT_HE =0 
	DC_SUELDO =  0
	DC_BASICO = IMPO2
	DC_PREMIO = 0
	DC_SAC =  0
	DC_VACAC = 0
	DC_HORAS = 0
END IF
IMPO8 = 0 

IF IMPO2 < IMPO4 THEN
	IMPO8 =  IMPO4
ELSE
	IMPO8 = IMPO2
END IF 





IF  CURRENTRECORD("DIAS")  = 100 THEN
	 D = 30
 ELSE
	 D = CURRENTRECORD("DIAS")
 END IF


IF CINT(MES) = 2 AND D = 30 THEN 
	D = 29 
END IF  

IF (CINT(MES) = 1 OR   CINT(MES) = 3 OR CINT(MES) = 5  OR CINT(MES) = 7 OR CINT(MES) = 8  OR CINT(MES) = 10  OR  CINT(MES) = 12)  and D = 30 THEN 
	D =  31
END IF 

		
REM ACA COMIENZA EL CALCULO PARA LAS SITUACIONES DE REVISTA DURANTE EL PERIODO

IF CINT(MES) = 2  THEN 
	DIAS_MAY =  28
END IF 

IF CINT(MES) = 1 OR   CINT(MES) = 3 OR CINT(MES) = 5  OR CINT(MES) = 7 OR CINT(MES) = 8  OR CINT(MES) = 10  OR  CINT(MES) = 12 THEN 
	DIAS_MAY =  31
END IF 

IF CINT(MES) = 4 OR   CINT(MES) = 6  OR CINT(MES) = 9  OR CINT(MES) = 11THEN 
	DIAS_MAY =  30
END IF 

REM VUELCO EN VARIABLES LAS SITUACIONES DE REVISTA


V_DI =  ACTUALREG("VACAC_D")
V_DF = ACTUALREG("VACAC_H")

P_D =  ACTUALREG("PRIMER_D")
P_S =  ACTUALREG("PRIMER_S")
P_H =  ACTUALREG("PRIMER_H")
S_D =  ACTUALREG("SEGUNDA_D")
S_S =  ACTUALREG("SEGUNDA_S")
S_H =  ACTUALREG("SEGUNDA_H")


SELECT CASE P_S
	CASE "RESPTO" 
		P_S = "14"
	CASE "LIC SH" 
		P_S = "13"
	CASE "LICMAT" 
		P_S = "05"
	CASE ELSE
		P_S = "00"
END SELECT 


SELECT CASE S_S
	CASE "RESPTO" 
		S_S = "14"
	CASE "LIC SH" 
		S_S = "13"
	CASE "LICMAT" 
		S_S = "05"
	CASE ELSE
		S_S = "00"
END SELECT 

REM ORDENO CRONOLOGICAMENTE LAS SITUACIONES 

IF V_DI = 0 THEN 
	IF P_D = 0 THEN 
		SIT1 = "01"
		DIA1 = "01"
		SIT2 = "01"
		DIA2 = "00"  
		SIT3 = "01"
		DIA3 = "00"  
	ELSE 
		IF P_D > 1 THEN 
			SIT1= "01"
			DIA1="01" 
			SIT2=P_S
			DIA2=P_D
			IF  S_D > 0 AND S_D = P_H+1 THEN 
				SIT3 = S_S
				DIA3 = S_D
			ELSE				
				IF  P_H < DIAS_MAY THEN 
					SIT3 = "01"
					DIA3= P_H + 1
				ELSE 
					SIT3 = "01"
					DIA3 = "00"
				END IF 
			END IF 
		ELSE
			SIT1 = P_S
			DIA1 = P_D
			IF S_D > P_H + 1 THEN 
				SIT2 = "01" 
				DIA2 = P_H + 1
				SIT3 = S_S
				DIA3 = S_D
			ELSE
				IF S_D = 0 THEN 
					IF P_H < DIAS_MAY THEN 
						SIT2 = "01" 
						DIA2 = P_H + 1
						SIT3 = "01"
						DIA3 = "00"
					ELSE
						SIT2 = "01" 
						DIA2 = "00" 
						SIT3 = "01"
						DIA3 = "00"
					END IF 	
				ELSE 
					SIT2 =  S_S
					DIA2 = P_H + 1
					SIT3 = "01"
					DIA3 = "00"
				END IF		
			END IF 			
		END IF 
	END IF	
ELSE
	REM TIENE VACACIONES EL PRIMER DIA
	IF V_DI = 1 THEN   
		 SIT1 = "12" 
		 DIA1 = "01" 
		IF  V_DF = DIAS_MAY THEN 
			SIT2 = "01"
			DIA2 = "00"
			SIT3 = "01"
			DIA3 = "00"
		ELSE
			IF P_D = 0 THEN 
				SIT2 = "01"
				DIA2= V_DF + 1
				SIT3=  "01"
				DIA3 = "00"
			ELSE
				IF P_D = V_DF+1 THEN 
				       SIT2= P_S
				       DIA2 = P_D
				       IF P_H < DIAS_MAY THEN 
					 SIT3 = "01" 
					 DIA3 = P_H + 1
				      ELSE
					SIT3 = "01"
					DIA3 = "00"				
		      		      END IF 
				ELSE
				       SIT2 = "01"
				       DIA2 = V_DF + 1
				       SIT3 = P_S
				       DIA3 = PD
				END IF 
			END IF 
		END IF 
	ELSE
		REM TIENE VACACIONES PERO NO EL PRIMER DIA Y EXISTE OTRA SITUACION DE REVISTA
		IF  P_D > 1 THEN 
			SIT1="01"
			DIA1="01" 
			IF P_D < V_DI  THEN 
				SIT2= P_S
				DIA2 = P_D
				SIT3 = "12"
				DIA3 = V_DI
			ELSE 
				SIT2= "12"
				DIA2 = V_DI
				SIT3 = P_S
				DIA3 = P_D
			END IF 	
		ELSE
		REM TIENE VACACIONES PERO NO EL PRIMER DIA Y NO EXISTE OTRA SITUACION DE REVISTA
			IF P_D = 0 THEN 
				SIT1="01"
				DIA1="01" 	
				SIT2="12"
				DIA2=V_DI
				IF V_DF < DIAS_MAY THEN
					SIT3 = "01"
					DIA3 = V_DF + 1
				ELSE
					SIT3 = "01"
					DIA3 = "00"
				END IF 
			ELSE 
			 	IF P_D = 1 THEN 
					SIT1 = P_S
					DIA1 = "01" 
					IF P_H + 1 = V_DI THEN 
						SIT2 = "12"
						DIA2 = V_DI 
						IF V_DF < DIAS_MAY THEN 
							SIT3 = "01"
							DIA3 = V_DF + 1
						ELSE
							SIT3 = "01"
							DIA3 = "00"
						END IF
					ELSE
						SIT2 = "01" 
						DIA2 = P_H + 1
						SIT3 = "12"
						DIA3 =  V_DI
					END IF 
				END IF
			END IF
		END IF 

	END IF 
END IF 


REM FINALIZA EL CALCULO PARA LAS SITUACIONES DE REVISTA DURANTE EL PERIODO



IF SIT3 = "01" AND DIA3 = "00" THEN 		
	IF SIT2 = "01" AND DIA2="00" THEN 	
		CODSIT = SIT1
	ELSE 	
		CODSIT = SIT2
	END IF	
ELSE 		
	CODSIT = SIT3	
END IF 		



IF cint(CODSIT) = 2  or CODSIT = "02" THEN
	CODSIT = "01"
END IF 

IF D = 0 THEN 
       HS = 1
ELSE 
      HS = 0
END IF 

IF DIA3="" THEN
	DIA3="00"
END IF

IF CODSIT=18 THEN

	SINI="01"

ELSE

	SINI = "00"

END IF

'AUXREMUNE = CURRENTRECORD("REMUNE")

'CALCULO EL REMUNERATIVO DE LAS DIFERENTES LIQUIDACIONES DEL MES
SSQL = "SELECT SUM(CASE SUBSTRING(SJRMVI_TIPCPT,1,1) WHEN 'H' THEN  SJRMVI_CALCUL "
SSQL = SSQL + "ELSE 0 END) FROM SJRMVI INNER JOIN SJRMVH ON SJRMVH_NROLEG = SJRMVI_NROLEG"
SSQL = SSQL + " AND SJRMVH_PERIOD = SJRMVI_PERIOD AND SJRMVH_TIPLIQ = SJRMVI_TIPLIQ AND SJRMVH_MODFOR = SJRMVI_MODFOR AND SJRMVH_CODFOR = SJRMVI_CODFOR AND SJRMVH_NROFOR = SJRMVI_NROFOR WHERE "
SSQL = SSQL + "SJRMVH_NROLEG = "&CURRENTRECORD("NUMEROLEGAJO")
SSQL = SSQL + " AND SJRMVI_PERIOD = '"&PARAMETERS("PERIODO").VALUES(1).FROMVALUESQL
SSQL = SSQL + "' AND SJRMVH_CIERRE = 'S' AND (SJRMVI_TIPLIQ = "&PARAMETERS("TIPLIQ").VALUES(1).FROMVALUESQL
SSQL = SSQL + " OR SJRMVI_TIPLIQ IN (SELECT"
SSQL = SSQL + " USR_LIBSUE_DATOS_TIPLIQ FROM USR_LIBSUE_DATOS WHERE "
SSQL=SSQL+"USR_LIBSUE_DATOS_PERIODO="&PARAMETERS("PERIODO").VALUES(1).FROMVALUESQL
SSQL = SSQL + " AND USR_LIBSUE_DATOS_PRESENTADO = 'S' ))"
AUXREMUNE = QUERYEXEC(CSTR(SSQL))


IMPO10 = CURRENTRECORD("IMPO10")

sSqlt = "SELECT SJCCOV_IMPORT FROM SJCCOV WHERE SJCCOV_CODCPT = 50120 AND SJCCOV_CODVAR = 'CONST2'"
TOPEDM = Queryexec(Cstr(sSqlt))
rem IMPO10 = IMPO10 + ActualReg("Detraccion_SAC")

IF AUXREMUNE - IMPO10 > 0  AND AUXREMUNE - IMPO10 > TOPEDM Then
	MONDETRAER = IMPO10
	IMPO10 = (IMPO2 - MONDETRAER)
ELSE
	IF AUXREMUNE - IMPO10 > 0  AND AUXREMUNE - IMPO10 < TOPEDM Then 
		MONDETRAER = AUXREMUNE - TOPEDM
		IMPO10 = (IMPO2 - MONDETRAER)
	ELSE
		MONDETRAER = 0
		IMPO10 = 0
	END IF
END IF



'CAMBIO 30-12-2021 SI EL LEGAJO ES JUBILADO QUE LOS IMPONIBLES 4 Y 8 NO CALCULEN LA CONTRIBUCIÃ“N A LA OBRA SOCIAL
SSQL = "SELECT SUM(SJRMVI_CALCUL) FROM SJRMVI "
SSQL = SSQL + " INNER JOIN SJCCOH ON SJRMVI_CODCPT = SJCCOH_CODCPT"
SSQL = SSQL + " INNER JOIN SJCCOA ON SJCCOH_CODCPT = SJCCOA_CODCPT WHERE "
SSQL = SSQL + "SJRMVI_NROLEG = "&CURRENTRECORD("NUMEROLEGAJO")
SSQL = SSQL + " AND SJRMVI_TIPLIQ = "&PARAMETERS("TIPLIQ").VALUES(1).FROMVALUESQL
SSQL = SSQL + " AND SJRMVI_PERIOD = '"&PARAMETERS("PERIODO").VALUES(1).FROMVALUESQL
SSQL = SSQL + "' and sjccoa_codacu = 'BDOBRA' and SJCCOA_ACUMUL = 'S'"
SSQL = SSQL + " AND SJCCOA_CODCPT < 90030 "

BASEOS = queryExec(CSTR(SSQL))

IF CODCON <> "02" THEN
	IMPO4 = IMPO1
    IMPO8 = IMPO2
ELSE 
	IMPO4 = BASEOS
    IMPO8 = BASEOS
END IF

MATER = CURRENTRECORD("MATER")



    X_RESULT = CURRENTRECORD("USR_LIBSUE_V_NROBLQ")&""&(CUIL)&""&C_NUMERO(ESPOSA,1,0)&""&MID(CSTR(C_NUMERO(HIJOS,2,0)),1,2)&""&C_NUMERO(CONCONV,1,0)&""&SEGVID&""&C_NUMERO(CORRED,1,0)&""
    X_RESULT = X_RESULT & C_NUMERO(CODEMP,1,0)&""&C_NUMERO(0,1,0)&""&C_STRING(CODSIT,2)&""&C_STRING(CODCON,2)&""&C_NUMERO(CODACT,3,0)&""&C_NUMERO(MODCON,3,0)&""&C_NUMERO(SINI,2,0)&""
    X_RESULT = X_RESULT & C_NUMERO(CODZON,2,0)&""&C_NUMERO(SIT1,2,0)&""&C_NUMERO(DIA1,2,0)&""&C_NUMERO(SIT2,2,0)&""&C_NUMERO(DIA2,2,0)&""&C_NUMERO(SIT3,2,0)&""&C_NUMERO(DIA3,2,0)&""
    X_RESULT = X_RESULT & C_NUMERO(D,2,0)&""&C_NUMERO(HS,3,0)&""&C_NUMERO(ADI,5,2)&""&C_NUMERO(0,5,2)&""&(CODOBS)&""&C_NUMERO(CANT_ADE,2,0)&""&C_NUMERO(APOR_OS,15,2)&""
    X_RESULT = X_RESULT & C_NUMERO(0,15,2)&""&C_NUMERO(0,15,2)&""&C_NUMERO(0,15,2)&""&C_NUMERO(0,15,2)&""&C_NUMERO(MATER,15,2)&""&C_NUMERO(REMUNE,15,2)&""&C_NUMERO(IMPO1,15,2)&""
    X_RESULT = X_RESULT & C_NUMERO(IMPO2,15,2)&""&C_NUMERO(IMPO3,15,2)&""&C_NUMERO(IMPO4,15,2)&""&C_NUMERO(IMPO5,15,2)&""&C_NUMERO(0,15,2)&""&C_NUMERO(0,15,2)&""&C_NUMERO(IMPO8,15,2)&""
    X_RESULT = X_RESULT & C_NUMERO(IMPO9,15,2)&""&C_NUMERO(0,15,2)&""&C_NUMERO(0,15,2)&""&C_NUMERO(IMPO10,15,2)&""&C_NUMERO(MONDETRAER,15,2)


    RESULT = X_RESULT



    FUNCTION C_NUMERO(CAMPO,LARGO, DECIMALES)
    CAMPO= REPLACE(CAMPO, "*", "")
    AUXNUMERO=FORMATNUMBER(CAMPO,DECIMALES,,,0)
    AUXNUMERO= REPLACE(AUXNUMERO, ".", "")
    IF INSTR(AUXNUMERO,"-") <> 0 THEN
        AUXNUMERO= REPLACE(AUXNUMERO, "-", "")
        C_NUMERO= "-" &STRING((LARGO-1) - LEN(TRIM(AUXNUMERO)),"0") & TRIM(AUXNUMERO)
    else
        C_NUMERO= STRING(LARGO - LEN(TRIM(AUXNUMERO)),"0") & TRIM(AUXNUMERO)
    END IF
    END FUNCTION

    FUNCTION C_STRING(CAMPO,LARGO)
    C_STRING= TRIM(CAMPO) & STRING(LARGO - LEN(TRIM(CAMPO))," ")
    END FUNCTION


    FUNCTION C_DERECHA(CAMPO,LARGO)
    C_DERECHA=STRING(LARGO - LEN(TRIM(CAMPO))," ") &TRIM(CAMPO)
    END FUNCTION
END IF